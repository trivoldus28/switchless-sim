## -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

def build(bld):
    obj = bld.create_ns3_program('main-test', ['core', 'point-to-point', 'internet', 'switchless', 'applications', 'mobility'])
    obj.source = {
        'main-test.cc',
        'p2p-cube.cc',
        'p2p-2d-mesh.cc',
        'p2p-fattree.cc',
        'p2p-hierarchical.cc',
        'data-center-app.cc',
        'dc-app-header.cc',
        'p2p-cube-dimordered.cc'
    }
   
    obj = bld.create_ns3_program('test-mesh', ['core', 'point-to-point', 'internet', 'applications', 'mobility'])
    obj.source = {
        'test-mesh.cc',
        'p2p-2d-mesh.cc'
    } 
   
    obj = bld.create_ns3_program('test-torus', ['core', 'point-to-point', 'internet', 'applications', 'mobility'])
    obj.source = {
        'test-torus.cc',
        'p2p-2d-mesh.cc'
    } 
   
    obj = bld.create_ns3_program('test-cube', ['core', 'point-to-point', 'internet', 'applications', 'mobility'])
    obj.source = {
        'test-ncube.cc',
        'p2p-cube.cc'
    } 
   
    obj = bld.create_ns3_program('test-cube-dimordered', ['core', 'point-to-point', 'internet', 'applications', 'mobility', 'switchless'])
    obj.source = {
        'dim-ordered-udp-client.cc',
        'dim-ordered-udp-server.cc',
        'test-cube-dimordered.cc',
        'p2p-cube-dimordered.cc'
    } 
   
    obj = bld.create_ns3_program('test-fattree', ['core', 'point-to-point', 'internet', 'applications', 'mobility'])
    obj.source = {
        'test-fattree.cc',
        'p2p-fattree.cc'
    }     
   
    obj = bld.create_ns3_program('test-hierarchical', ['core', 'point-to-point', 'internet', 'applications', 'mobility'])
    obj.source = {
        'test-hierarchical.cc',
        'p2p-hierarchical.cc'
    }     

    obj = bld.create_ns3_program('two-node-test', ['core', 'point-to-point', 'internet', 'switchless', 'applications'])
    obj.source = {
        'two-node-test.cc',
        'data-center-app.cc',
        'dc-app-header.cc'
    }
