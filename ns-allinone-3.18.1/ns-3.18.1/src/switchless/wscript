# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

# def options(opt):
#     pass

# def configure(conf):
#     conf.check_nonfatal(header_name='stdint.h', define_name='HAVE_STDINT_H')

def build(bld):
    # Just need internet module for LoopbackNetDevice and RttEstimator
    module = bld.create_ns3_module('switchless', ['core', 'network', 'internet'])
    module.source = [
        'model/dim-ordered-address.cc',
        'model/dim-ordered-interface-address.cc',
        'helper/dim-ordered-address-helper.cc',
        'model/dim-ordered-interface.cc',
        'helper/dim-ordered-interface-container.cc',
        'model/dim-ordered-header.cc',
        'model/dim-ordered.cc',
        'model/dim-ordered-l3-protocol.cc',
        'model/dim-ordered-l4-protocol.cc',
        'model/dim-ordered-socket-address.cc',
        'model/dim-ordered-raw-socket-impl.cc',
        'model/dim-ordered-raw-socket-factory.cc',
        'model/dim-ordered-raw-socket-factory-impl.cc',
        'model/dim-ordered-end-point.cc',
        'model/dim-ordered-end-point-demux.cc',
        'model/do-udp-header.cc',
        'model/do-udp-socket.cc',
        'model/do-udp-socket-impl.cc',
        'model/do-udp-socket-factory.cc',
        'model/do-udp-socket-factory-impl.cc',
        'model/do-udp-l4-protocol.cc',
        'model/do-tcp-header.cc',
        'model/do-tcp-rx-buffer.cc',
        'model/do-tcp-tx-buffer.cc',
        'model/do-tcp-socket.cc',
        'model/do-tcp-socket-base.cc',
        'model/do-tcp-reno.cc',
        'model/do-tcp-newreno.cc',
        'model/do-tcp-rfc793.cc',
        'model/do-tcp-tahoe.cc',
        'model/do-tcp-westwood.cc',
        'model/do-tcp-socket-factory.cc',
        'model/do-tcp-socket-factory-impl.cc',
        'model/do-tcp-l4-protocol.cc',
        'helper/dim-ordered-stack-helper.cc'
        ]

    module_test = bld.create_ns3_module_test_library('switchless')
    module_test.source = [
        ]

    headers = bld(features='ns3header')
    headers.module = 'switchless'
    headers.source = [
        'model/dim-ordered-address.h',
        'model/dim-ordered-interface-address.h',
        'helper/dim-ordered-address-helper.h',
        'model/dim-ordered-interface.h',
        'helper/dim-ordered-interface-container.h',
        'model/dim-ordered-header.h',
        'model/dim-ordered.h',
        'model/dim-ordered-l3-protocol.h',
        'model/dim-ordered-l4-protocol.h',
        'model/dim-ordered-socket-address.h',
        'model/dim-ordered-raw-socket-impl.h',
        'model/dim-ordered-raw-socket-factory.h',
        'model/dim-ordered-raw-socket-factory-impl.h',
        'model/dim-ordered-end-point.h',
        'model/dim-ordered-end-point-demux.h',
        'model/do-udp-header.h',
        'model/do-udp-socket.h',
        'model/do-udp-socket-impl.h',
        'model/do-udp-socket-factory.h',
        'model/do-udp-socket-factory-impl.h',
        'model/do-udp-l4-protocol.h',
        'model/do-tcp-header.h',
        'model/do-tcp-rx-buffer.h',
        'model/do-tcp-tx-buffer.h',
        'model/do-tcp-socket.h',
        'model/do-tcp-socket-base.h',
        'model/do-tcp-reno.h',
        'model/do-tcp-newreno.h',
        'model/do-tcp-rfc793.h',
        'model/do-tcp-tahoe.h',
        'model/do-tcp-westwood.h',
        'model/do-tcp-socket-factory.h',
        'model/do-tcp-socket-factory-impl.h',
        'model/do-tcp-l4-protocol.h',
        'helper/dim-ordered-stack-helper.h'
        ]

    if bld.env.ENABLE_EXAMPLES:
        bld.recurse('examples')

    # bld.ns3_python_bindings()

